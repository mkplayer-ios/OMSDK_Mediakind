// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MKOpenMeasurementSDK_iOS
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import BitmovinPlayer
import Foundation
@_exported import MKOpenMeasurementSDK_iOS
import MKPlayer
import OMSDK_Turner
import OSLog
import Swift
import _Concurrency
import _StringProcessing
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers final public class MKPOMManager : ObjectiveC.NSObject {
  public static let shared: MKOpenMeasurementSDK_iOS.MKPOMManager
  final public var playerEventListener: (any MKPlayer.MKPPlayerEventListener)?
  @objc deinit
}
public class OMSDKHandler {
  public init()
  public init(withPlayer: any MKPlayer.MKPPlayerAPI, playerView: UIKit.UIView)
  @objc deinit
}
extension MKOpenMeasurementSDK_iOS.OMSDKHandler : MKPlayer.MKPPlayerEventListener {
  public func onAdStarted(event: MKPlayer.MKPAdStartedEvent)
  public func onAdQuartile(event: MKPlayer.MKPAdQuartileEvent)
  public func onAdBreakStarted(event: MKPlayer.MKPAdBreakStartedEvent)
  public func onAdFinished(event: MKPlayer.MKPAdFinishedEvent)
  public func onAdBreakEnd(event: MKPlayer.MKPAdBreakEndEvent)
  public func onPlay(event: MKPlayer.MKPPlayEvent)
  public func onPaused(event: MKPlayer.MKPPausedEvent)
  public func onMuted(event: MKPlayer.MKPMutedEvent)
  public func onUnmuted(event: MKPlayer.MKPUnmutedEvent)
  public func onSourceUnloaded(event: MKPlayer.MKPSourceUnloadedEvent)
  public func onStallStarted(event: MKPlayer.MKPStallStartedEvent)
  public func onStallEnded(event: MKPlayer.MKPStallEndedEvent)
}
